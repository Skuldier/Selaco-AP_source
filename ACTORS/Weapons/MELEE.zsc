// Tradiontal melee attack

class WeaponMeleeGlassImpact : FasterProjectile
{
	default
	{
		+ACTIVATEIMPACT
		+FORCEXYBILLBOARD;
		+ACTIVATEPCROSS
		+THRUACTORS
		radius 2;
		height 2;
		projectile;
		speed 24;
	}
	states
	{
		Spawn:
			TNT1 A 2;
			stop;
	}
}

class WeaponMelee: FastProjectile
{

	mixin ImpactMaterial;
	mixin ParticleDefinitionEmitter;
	void checkImpactEffects() {
		string hittex;
		string soundString;
		FLineTraceData RemoteRay;
		LineTrace(angle,35,pitch,offsetz: height,data: RemoteRay);

		if (RemoteRay.HitType == TRACE_HitWall || RemoteRay.HitType == TRACE_HitFloor || RemoteRay.HitType == TRACE_HitCeiling)
			{
				hittex = texman.GetName(RemoteRay.HitTexture);
			}
		for (int i; i < WoodMaterials.size(); i++) { 
			if(hittex == WoodMaterials[i]) {
				soundString = "MELEE/WOOD";
			}
		}
		for (int i; i < MetalMaterials.size(); i++) { 
			if(hittex == MetalMaterials[i]) {
				soundString = "MELEE/METAL";
			}
		}
		for (int i; i < MetalCrateMaterial.size(); i++) { 
			if(hittex == MetalCrateMaterial[i]) {
				soundString = "MELEE/METAL";
			}
		}
		for (int i; i < SteamPipeMaterial.size(); i++) { 
			if(hittex == SteamPipeMaterial[i]) {
				soundString = "MELEE/METAL";
			}
		}
		for (int i; i < GlassMaterial.size(); i++) { 
			if(hittex == GlassMaterial[i]) {
				A_SprayDecal("GLASSHITS", 172);
				soundString = "impact/glasswall";
			}
		}
		A_Playsound(soundString, CHAN_AUTO, 1.0, 0, 0.8);		
	}

	default {
		Radius 5;
		Height 5;
		DamageType "MeleeImpact";
		Projectile;
		+ACTIVATEIMPACT
		+FORCEXYBILLBOARD;
		+ACTIVATEPCROSS
		+BLOODLESSIMPACT
		RenderStyle "none";
		Alpha 0.6;
		Damage 9;
		Speed 28;
		//HitObituary "$OB_IMPHIT";
		SeeSound "none";
		DeathSound "none";
		Decal "MeleeMark";
	}

	States
	{
	Spawn:
		TNT1 A 2 BRIGHT;
		Stop;

	Xdeath:
			TNT1 A 0 A_QuakeEx( 3, 3, 3, 8, 0, 90, 0, 0, 10, 10, 10, 6);
			TNT1 A 0 A_PLAYSOUND("impact/wallpunch", CHAN_5, 0.7);
			PUFF A 0 A_PlaySound("impact/melee", CHAN_AUTO, 0.5, 0, 0.7);
			TNT1 A 0 A_AlertMonsters();
			goto Finish;
	Death:
			TNT1 A 0 A_SPAWNITEMEX("MeleeImpactEffectLSmall");
			TNT1 A 0 A_PLAYSOUND("impact/wallpunch", CHAN_5, 1.0);
			TNT1 A 0 {
				EmitDefinition('ShortSpark360ParticleDefinition', chance: 0.75, numTries: 45, angle:-180, pitch:0, speed:-3);
			}
			TNT1 A 0;
	Finish:
			TNT1 A 0 A_CheckFloor(2);
			TNT1 A 0 {
				//a_spawnitemex("MeleeImpactEffect");
				checkImpactEffects();
				// If the player has a weapon with upgraded melee attacks
				if (getClassName() == "WeaponMeleeEnhanced") {
					A_PLAYSOUND("impact/meleeplus", CHAN_AUTO);
					for(int i = 0; i < 23; i++) {
						A_SpawnProjectile ("Sparkembers", 2, 0, random (-45, 45));
					}
				}
			}
			TNT1 A 10;
			Stop;
	}


	override int SpecialMissileHit (Actor victim) {
        // Don't hit shutters
        if(victim is "ShutterWindow1") {
            return 1;
        }
		if(master && victim is "SelacoEnemy" && master.countinv("MegaPowderAmount"))
		{
			master.A_TakeInventory("MegaPowderAmount", 3);
		}
		return super.SpecialMissileHit(victim);
	}
}

class WeaponMeleeFist : WeaponMelee {
	default {
		radius 5;
		Speed 30;
		DamageType "DawnFist";
	}
	states {
	Xdeath:
			TNT1 A 0 A_AlertMonsters();
			PUFF A 0 A_PlaySound("impact/wallpunch", 3);
			goto Finish;
	}
}

class MeleeKick : WeaponMelee { }

class WeaponMeleeUppercut : WeaponMeleeFist {
	default {
		damage 95;
	}
	states
	{
		xDeath:
			TNT1 A 0 A_AlertMonsters();
			PUFF A 0 A_PlaySound("impact/wallpunch", 3);
			goto Finish;
	}
}


class WeaponMeleeTaser: WeaponMelee
{
	default {
		DamageType "MeleeImpactTaser";
	}
	States
	{
		Xdeath:
			TNT1 A 0 A_QuakeEx( 3, 3, 3, 8, 0, 90, 0, 0, 10, 10, 10, 6);
			TNT1 A 0 ACS_NamedExecuteAlways("SMG_Taser_Charger", 0);
			TNT1 AAAAAAAAAA 0 A_SpawnItemEx("Spark_impact3", random(-1,1), random(-1,1), 0, frandom(-0.3,0.3), frandom(-0.3,0.3), frandom(0.3,0.3));
			TNT1 A 0 A_SpawnItemEx("PlasmaPuffTaser");
			PUFF A 0 A_PlaySound("impact/melee", 3);
			EXPL AAAAAA 0 A_SpawnProjectile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360));
			goto Finish;
	}
}

class WeaponMeleeEnhanced: WeaponMelee {
	default {
   		Damage 30;
	}
}

// Used for sliding enemies into walls
class SlideMelee: WeaponMelee
{
	default {
		radius 40;
		Damage 8;
	}
}

class MeleeImpactEffect  : actor {
    static const String SmokeEffects[] = {"HWT1", "HWT2", "HWT3"};
	int pickedArray;
	default {
		scale 0.35;
		alpha 1.0;
		SelfLighting "353535";
		+rollsprite;
		+NOGRAVITY
		+NOINTERACTION
	}
	states {
        Indexer:
            // Index the whole thing. We don't want another instability problem.
            HWT1 A 0;
            HWT2 A 0;
            HWT3 A 0;
        Spawn:
            TNT1 A 0;
            TNT1 A 0 {
				A_SETROLL(random(0,360));
                pickedArray = random(0,SmokeEffects.size() -1);
            }
            TNT1 A 0 {
                //Sprite = GetSpriteIndex(SmokeEffects[pickedArray]);
            }
		Effect:
			HME1 ABCDEFGHIJKLMNOPQR 1;
			stop;
	}
}

class MeleeImpactEffectLSmall : MeleeImpactEffect
{
	default
	{
		scale 0.15;
		alpha 0.6;
	}
}

class MeleeImpactEffectLessOpague : MeleeImpactEffect
{
	default
	{
		alpha 0.6;
	}
}

class MeleeImpactLarger : MeleeImpactEffect {
	default {
		scale 0.6;
	}
}

class MeleeWallSmash  : actor {
	default {
		scale 1.05;
		alpha 1.0;
		+rollsprite;
		+NOGRAVITY
		+NOINTERACTION
	}
	states {
		Spawn:
			TNT1 A 0;
            TNT1 A 0 {
                A_SETROLL(random(0,360));
            }
		Effect:
			HWH1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 BRIGHT;
			stop;
	}
}

class MeleeWallSmashTiny : MeleeWallSmash {
	default {
		scale 0.4;
	}
}