

class MasterJunk : SELACOACTOR {
    int sleepDuration;
    flagdef NoPermanentJunk : selacoActorFlags2, 25;
    property SleepDuration : sleepDuration;
    default {
        DistanceCheck "r_trashLOD";
        +DOOMBOUNCE;
        +Missile;
        +SelacoActor.IsTrash;
        +DONTGIB;
        +THRUACTORS;
        +USEBOUNCESTATE;
        // We manage our own sleep here
        -SelacoActor.WakeNearPlayer;
        +SelacoActor.PreventSleep;
        -SelacoActor.WakeOnTouch;
        -SelacoActor.WakeOnPain;
        -MasterJunk.NoPermanentJunk;
        MasterJunk.SleepDuration 500;
        speed 5;
        radius 5;
        Bouncefactor 0.4;
        scale 0.45;
        gravity 0.6;
        BounceCount 3;
    }

    states {
        Spawn:
            TNT1 A 0;
            TNT1 A 0 {
                A_SETPITCH(random(0,180));
                A_SETANGLE(angle+(frandom(0,360)));
            }
        Looper:
            JUNK A 1 {
                A_SETANGLE(angle+frandom(10,30));
                A_SETPITCH(pitch+random(3,6));
                if(vel.z == 0) {
                    SetStateLabel("Death");
                }
            }
            loop;
        Bounce.wall:
        Bounce.floor:
            TNT1 A 0 {
                if(random(0,3) == 3) {a_playsound("chunk/impact", CHAN_AUTO, 0.9, 0, 1, 0, frandom(0.8, 1.1));}
            }
            goto Looper;
        Death:
            JUNK A 2 {
                pitch = 0;
                if(pos.z <= floorz && vel.length() < 0.001) {
                    SetStateLabel("RealDeath");
                }
            }
            loop;
        RealDeath:
            TNT1 A 0 {
                if(random(0,3) == 3) {a_playsound("chunk/impact", CHAN_AUTO, 0.9, 0, 1, 0, frandom(0.8, 1.1));}
            }
            JUNK A 1 {
                if(!bNoPermanentJunk && getCvar("g_permanentDestruction")) {
                    sleepindefinite();
                } else {
                    sleep(bNoPermanentJunk ? sleepDuration : sleepDuration*1.5);
                }
                
                A_ChangeLinkFlags(1);
            }
        Vanish:
            JUNK AAAAAAAAAA 1 A_FADEOUT(0,1);
            stop;
    }
}

class junk1 : MasterJunk  { }
class junk2 : MasterJunk  { }
class junk3 : MasterJunk  { }
class junk4 : MasterJunk  { default {   scale 0.3; }    }
class junk5 : MasterJunk  { }
class junk6 : MasterJunk  { }
class junk7 : MasterJunk  { }
class junk8 : MasterJunk  { }
class junk9 : MasterJunk  { }
class junk10 : MasterJunk  { }
class junk11 : MasterJunk  { }
class junk12 : MasterJunk  { }
class junk13 : MasterJunk  { }

class JunkLauncher : actor {
	static const String JunkItems[] =
		{
			"junk1",
			"junk2",
			"junk3",
			"junk4",
			"junk5",
            "junk6",
            "junk7",
            "junk8",
            "junk9",
            "junk10"
            "junk11",
            "junk12",
            "junk13"
		};

    default {
        -solid;
    }
    states {
        Spawn:
            TNT1 A 0;
            TNT1 A 0 {
                A_SpawnItemEx(Junkitems[frandom(0, JunkItems.size())], frandom(-2, 2), frandom(-2,2), frandom(0,5), frandom(-5, 5), frandom(-5,5), frandom(2,11));
            }
            stop;
    }
}

class JunkLauncher2 : JunkLauncher {
    states {
        Spawn:
            TNT1 A 0;
            TNT1 A 0 {
                bool ignored;
                Actor junk;
                [ignored, junk] = A_SpawnItemEx(Junkitems[frandom(0, JunkItems.size())], frandom(-2, 2), frandom(-2,2), frandom(2,5), frandom(-5, 5), frandom(-5,5), frandom(7,11));
                if(MasterJunk(junk)) {  // Prevent permanent junk for the trash tornado
                    MasterJunk(junk).bNoPermanentJunk = true;
                }
            }
            stop;
    }
}


class AIRCO_PIECE_1 : SelacoActor { 
    states
    {
        Spawn:
            TNT1 A 0;
            VOXE L -1
            {
                sleepindefinite();
            }
            stop;
        MissileMode:
            VOXE L 1;
            loop;
    }
}
class AIRCO_PIECE_2 : AIRCO_PIECE_1 { }
class AIRCO_PIECE_3 : AIRCO_PIECE_1 { }
class AIRCO_PIECE_4 : AIRCO_PIECE_1 { }
class AIRCO_PIECE_5 : AIRCO_PIECE_1 { }

class WIRE_PIECE_1 : AIRCO_PIECE_1 { }
class WIRE_PIECE_2 : WIRE_PIECE_1 { }
class WIRE_PIECE_3 : WIRE_PIECE_1 { }
class WIRE_PIECE_4 : WIRE_PIECE_1 { }
class WIRE_PIECE_5 : WIRE_PIECE_1 { }
class WIRE_PIECE_6 : WIRE_PIECE_1 { }
class WIRE_PIECE_7 : WIRE_PIECE_1 { }
class WIRE_PIECE_8 : WIRE_PIECE_1 { }

class METALBEAM_PIECE_1 : AIRCO_PIECE_1 { }
class METALBEAM_PIECE_2 : METALBEAM_PIECE_1 { }
class METALBEAM_PIECE_3 : METALBEAM_PIECE_1 { }
class METALBEAM_PIECE_4 : METALBEAM_PIECE_1 { }
class METALBEAM_PIECE_5 : METALBEAM_PIECE_1 { }
class METALBEAM_PIECE_6 : METALBEAM_PIECE_1 { }
class METALBEAM_PIECE_7 : METALBEAM_PIECE_1 { }

class FOAM_PIECE_1 : AIRCO_PIECE_1 { }
class FOAM_PIECE_2 : FOAM_PIECE_1 { }
class FOAM_PIECE_3 : FOAM_PIECE_1 { }
class FOAM_PIECE_4 : FOAM_PIECE_1 { }
class FOAM_PIECE_5 : FOAM_PIECE_1 { }
class FOAM_PIECE_6 : FOAM_PIECE_1 { }
class FOAM_PIECE_7 : FOAM_PIECE_1 { }