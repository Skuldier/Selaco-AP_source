
class OfficeChairMaster : PickupableDecoration {
	string BrokenChairModel, FeetModel, ChairPieceModel;
	property BrokenChairModel : BrokenChairModel;
	property FeetModel : FeetModel;
	property ChairPieceModel : ChairPieceModel;
	property wheelSound : wheelSound;
    default {
        // FLAGS
        +solid

        // PROPERTIES
        scale 1.0;
        radius 14;
		SelacoActor.collisionSound "PUSH/OFFICECHAIR";
		PickupableDecoration.grabSound "Officechair/pickup";
		PickupableDecoration.landingSound "Officechair/land";
        SelacoActor.UseTag "$ACT_GRAB";
		DecorationObject.wheelSound "movers/chairride";
		+PickupableDecoration.TranslucentPickup;
		PickupableDecoration.ThrowVel 12;
		PickupableDecoration.MaxThrowVel 25;
		PickupableDecoration.HoldHeight -21;
		+PickupableDecoration.HoldFromAnyAngle
		PushFactor 0.95;
		SelacoActor.SpecialPushFactor 1.0;
		+SelacoActor.SpecialPushable;
		+SelacoActor.SpecialPushDirectionFix;
    }
    states {
		BeginMoving:
			VOXE L 1 A_PLAYSOUND(wheelSound, CHAN_6, 1.0, 1);
		Moving:
			VOXE L 1 {
				FindFloorCeiling();
				A_SetAngle(angle + 3, SPF_INTERPOLATE);
                if(isStationary()) {
					objectMoves = false;
					A_StopSound(CHAN_6);
                    setStateLabel("StopMoving");
                }
            }
			loop;
		StopMoving:
			VOXE LLL 1 A_SetAngle(angle + 2);
			TNT1 A 0 setStateLabel("Looper");
		Pain:
			VOXE L 1 A_PLAYSOUND("impact/mechanical", CHAN_AUTO, 0.5);
			TNT1 A 0 setStateLabel("BeginMoving");
    }
}

class OfficeChair : OfficeChairMaster {

	override void tick()
	{
		super.tick();
		if(!isFalling && !objectMoves && vel != (0,0,0))
		{
            A_STOPSOUND(CHAN_6);
            if(isMoving() && !isPickedUp()) {
				if(!objectMoves) {
			        objectMoves = true;
                	A_PLAYSOUND(wheelSound, CHAN_6, 1.0, 1);
				}
                setStateLabel("Moving");
            } else {
				objectMoves = false;
			}
		}
		if(objectMoves && vel.xy ~== (0,0))
		{
			objectMoves = false;
			A_STOPSOUND(CHAN_6);
		}
	}

	override void Die(Actor source, Actor inflictor, int dmgflags, Name MeansOfDeath) {
		for(int x=7;x>0;x--)
		{
			A_SPAWNITEMEX("BigSmokes", frandom(-20,20), frandom(-20,20), frandom(0,10), frandom(0.3,1.0), 0, frandom(-0.4,0.4), angle:random(0,360));
		}
		Super.Die(source, inflictor, dmgflags, MeansOfDeath);
	}


    default {
		tag "$OBJECT_OFFICECHAIR";
        // FLAGS
        +NOBLOODDECALS
        +Shootable
        -NOBLOOD
        +PUSHABLE
        +BOUNCEONWALLS
        +BOUNCEONFLOORS
        +BLOODSPLATTER
        +USESPECIAL;
		+SLIDESONWALLS;
		-CANNOTPUSH;
		+SelacoActor.IsOnWheels;
        // PROPERTIES
		OfficeChairMaster.ChairPieceModel "OfficeChair_Piece";
		OfficeChairMaster.BrokenChairModel "OfficeChair_Damaged";
		OfficeChairMaster.FeetModel "OfficeChair_Feet";
		Health 20;
		PushFactor 1.0;
		height 41;
		MaxStepHeight 10;
		bouncefactor 0.1;
		friction 1.0;
		mass 350;
		PainThreshold 5;
		Activation THINGSPEC_switch;
		PainChance 255;
		DamageFactor "Gridlock", 10000.0;
        PainSound "impact/mechanical";
        Bloodtype "LeatherChunk", "LeatherChunk", "LeatherChunk";
    }
	States {
		Spawn:
			VOXE L 0;
			VOXE L 1 {
				isFalling = false;
				FindFloorCeiling();
				SetStateLabel("Looper");
			}
			loop;
		Looper:
			VOXE L 0;
			VOXE L -1;
			loop;

		Death:
			TNT1 A 0 A_JUMPIF(bMissile, "Death.Gridlock");
			TNT1 A 1 A_JUMPIF(health <= 0, "SwitchToDestroy");
			goto Looper;
		Pain.Gridlock:
		Death.Gridlock:
		Death.GravityThud:
		Death.ExplosiveImpact:
			TNT1 A 0 {
				bool dontcare;
				Actor a;
				[dontcare, a] = A_SPAWNITEMEX(ChairPieceModel);
				if(a) a.vel = (random(-6, 6), random(-6, 6), random(0, 5));
				[dontcare, a] = A_SPAWNITEMEX(FeetModel);
				if(a) a.vel = (random(-6, 6), random(-6, 6), random(0, 5));
			} 
			TNT1 A 1;
			stop;
		SwitchToDestroy:
			TNT1 A 0 {bNoInteraction = true;}
			TNT1 A 0 A_SPAWNITEMEX(BrokenChairModel);
			stop;
	}
}


class OfficeChair_Damaged : OfficeChair {
    default {
	    Health 40;
		pushfactor 0.7;
		OfficeChairMaster.ChairPieceModel "OfficeChair_Piece";
		DecorationObject.wheelSound "movers/chairride/broken";
	    tag "$OBJECT_OFFICECHAIRDESTROYED";
	    mass 240;
    }
	States {
		Moving:
            VOXE L 1;
			VOXE L 1 {
                if(isStationary()) {
                    setStateLabel("Spawn");
                }
            }
			VOXE L 0 A_SETANGLE(angle + 3, SPF_INTERPOLATE);
			VOXE L 1 A_SpawnItemEx("RainSmoke", 0, 0, 10, 1, 0, 0, 0);
			loop;
		Pain:
			VOXE L 0 A_PLAYSOUND("impact/mechanical");
			VOXE L 1 A_SETANGLE(angle+10, SPF_INTERPOLATE);
			TNT1 A 0 setStateLabel("BeginMoving");
		Looper:
			VOXE L 0;
			VOXE L -1;
			loop;
		Death.GravityThud:
		Death:
			TNT1 A 0 {bNoInteraction = true;}
			TNT1 A 0 A_SpawnProjectile(ChairPieceModel, 16, 0, 180, flags:CMF_AIMOFFSET | CMF_OFFSETPITCH ,pitch:frandom(-30,-50));
			TNT1 A 0 A_SpawnItemEx(FeetModel, 0, 0, 10, frandom(1, 5), frandom(1, 5), frandom(3, 5));
			TNT1 A 1;
			stop;
		Death.ExplosiveImpact:
		Death.Shotgun:
			TNT1 A 0 {bNoInteraction = true;}
			TNT1 A 0 A_SpawnProjectile(ChairPieceModel, 16, 0, 180, flags:CMF_AIMOFFSET | CMF_OFFSETPITCH,pitch:frandom(-130,140));
			TNT1 A 0 A_SpawnProjectile(FeetModel, 3, 0, 180);
			stop;
		}
}



class OfficeChair_Piece : SelacoActor {
    default {

        // FLAGS
        +DOOMBOUNCE
        +CLIENTSIDEONLY
        +MISSILE
        +NOTELEPORT
        +USEBOUNCESTATE
        +GHOST
        +NOBLOCKMAP
        +THRUACTORS
        -Shootable
        +INVULNERABLE

        // PROPERTIES
        Speed 8;
        height 5;
        radius 5;
        PushFactor 0.4;
        BounceCount 3;
        BounceFactor 0.4;
        BounceSound "impact/helmet";
        mass 20;
    }
	States {
		Spawn:
			TNT1 A 0;
			TNT1 A 0 {
				bThruActors = false;
				bSolid = false;
			}
			VOXE L 0 A_SetRenderStyle(1.0, STYLE_Normal);
			TNT1 A 0 A_SetAngle(random(0, 360));
			TNT1 A 0 A_ChangeVelocity(0, 0, 8);
		Idle:
			TNT1 A 0;
			VOXE L 2 {
				A_SETPITCH(pitch + frandom(25, 30));
			}
			VOXE L 1
			{
				if(pos.z == floorz || vel.length() == 0)
				{
					setStateLabel("Death");
				}
			}
			loop;
		Bounce:
			VOXE L 1
            {
				A_SPAWNITEMEX("BigSmokes", frandom(-20,20), frandom(-20,20), frandom(0,10), frandom(0.3,1.0), 0, frandom(-0.4,0.4), angle:random(0,360));
				A_PlaySound("impact/tray");
                EmitDefinition('ShortSparkParticleDefinition', chance: 0.75, numTries: 15, angle:frandom(0, 360), pitch:frandom(0, 40), speed:frandom(0.4,0.6), velocity:(frandom(-0.5, 0.5), frandom(-0.5, 0.5), 0));
            }
			goto Idle;
		Death:
			TNT1 A 0 A_SETPITCH(0);
			VOXE L -1;
			loop;
		}
}

class OfficeChair_Feet : OfficeChairMaster {

	override bool grind(bool items)
	{
		DieByCrushing();
		return true;
	}

	override void postbeginPlay() {
		super.postBeginPlay();
		A_PLAYSOUND("dest/snap", CHAN_AUTO);
	}
    default {
        // FLAGS
			+BUDDHA
            +PUSHABLE;
        // PROPERTIES
			tag "$OBJECT_OFFICECHAIRBASE";
            Health 9000;
            PushFactor 1.05;
			PickupableDecoration.HoldHeight -12;
            height 6;
            PainSound "impact/hardmetal";
            BloodType "Stacked_Sparks_Lite", "Stacked_Sparks_Lite", "Stacked_Sparks_Lite";
            mass 240;
    }
	States {
		Spawn:
			TNT1 A 0;
        Looper:
            VOXE L 3 {
                if(isMoving()) {
                    setStateLabel("Moving");
                }
            }
		Moving:
            VOXE L 1;
			VOXE L 1 
			{
                if (isStationary() || isPickedUp()) {
                    setStateLabel("Looper");
                }
            }
			VOXE L 0 A_SETANGLE(angle + 3, SPF_INTERPOLATE);
			VOXE L 6 A_SpawnItemEx("RainSmoke", 0, 0, 10, 1, 0, 0, 0);
			loop;
		Death.Gridlock:
			stop;
		Pain:
			VOXE L 0 A_PLAYSOUND("impact/hardmetal");
			VOXE L 1 A_SETANGLE(angle+10, SPF_INTERPOLATE);
			goto Moving;
		}
}

class OfficeChair2 : OfficeChair {
	default {
		OfficeChairMaster.BrokenChairModel "OfficeChair2_Damaged";
		OfficeChairMaster.FeetModel "OfficeChair2_Feet";
		OfficeChairMaster.ChairPieceModel "OfficeChair2_Chairpiece";
	}
	states{
		Spawn:
			TNT1 A 0;
			VOXE L 1 {
				SetStateLabel("Looper");
			}
			loop;
	}
}

class OfficeChair2_Damaged : OfficeChair_Damaged {
	default {
		OfficeChairMaster.BrokenChairModel "OfficeChair2_Damaged";
		OfficeChairMaster.FeetModel "OfficeChair2_Feet";
		OfficeChairMaster.ChairPieceModel "OfficeChair2_Chairpiece";
	}
}
class OfficeChair2_Feet : OfficeChair_Feet		 {
		default {
		OfficeChairMaster.BrokenChairModel "OfficeChair2_Damaged";
		OfficeChairMaster.FeetModel "OfficeChair2_Feet";
		OfficeChairMaster.ChairPieceModel "OfficeChair2_Chairpiece";
	}
}
class OfficeChair2_Chairpiece : OfficeChair_Piece {}