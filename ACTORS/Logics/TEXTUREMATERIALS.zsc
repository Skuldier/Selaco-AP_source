mixin class ImpactMaterial {
	// NOT assigning a Material will default to Concrete!
	// Shooting a crate metal surface.
	static const Name MetalCrateMaterial[] =
		{
			"BOX1","BOX12","BOX1W", "BOX1AD", "BOX1A", "PTHINCRA", "STARCLOC","STARCLOE", "PNLSTS6", "PNLSTST", "PNLSTR4", "PNLSTR5", "PNLSTR6", "PNLSTR7", "PNLSTR8"
			"BOX1WD","PTHINCRB","STARBX1A","STARBX1B","STARBX1C","STARBX1D","STARBX2A","STARBX2B","STARBX2C","STARBX2D","FACBOX1A","FACBOX1B", "FLOLOK1F", "FLOLOK1A", "FLOLOK1B", "FLOLOK1C", "FLOLOK1D", "FLOLOK1E", "FLOLOK2A",
			"INDCRA1A","INDCRA1B","INDCRA2A","INDCRA2B","INDCRA3A", "FACGRBR1", "FACGRBR2", "PNLSTS4", "MDTGR1B", "FACGRT1A", "FACGRT1B", "FACGRT2A", "FACGRT2B"
		};

	// Wood
	static const Name WoodMaterials[] =
		{
			"WOOD_N06","PTHCABA","CABILENG", "WOODF2", "WOOD_N06", "STEP5",
			"CABFRNT2","PLTRBX1A","WOODFLA1","WOOD_N05","WOOD_N07","BOXSIDE", "WOODFLA7", "WOOD_NW2",
			"BOX2","CAB1","BLUTX4S","BOX2A","WOODVERT","WOODCABA","WOODCABB","WOODCABC", "PTHILENG", "PTHILESD", "UPCABB", "PLTRBX2A",
			"WODCRB1A","WODCRB1B","WODCRB1C","WODCRB1D","WODCRT1A","WODCRT1B","WODCRT2A","WOODB32A","RESMINIA","RESMINIB","WODCRT3A","WODCRT3B",
			"WODBLA1A","WODBLA1B","WODBLA1C","WODBLA1D","WODBLA1G","WODBLA1O","WODBLA1R","WODWHI1A","WODWHI1B","WODWHI1C","WODWHI1D","WODWHI2A",
			"STARWR1A","STARWR1B","WODZAG1A","WODZAG1B","WODZAG2A","WODZAG2B","WODZAG3A","WODZAG3B","OFIBOK1B","WODTBT1A","WODTBT1B",
			"WODLPL1A","WODTPL1A","WODSCR1A","WODSCR1B","WODSTO1A","WODSTO1B","WODWAL1A","WODWAL1B","WODLPL2A","WODDOR1A","WODDOR1B","WODDOR1C",
			"WODDOR2A","WINBRL1A","WINBRL1B","WINBRL1C","WINBRL1D","WINBOT1A","WINBOT1B","WINBOT1C","WINBOT1D","WINBOT2A","WINBOT2B",
			"WINBOT2C","WODCRT4A","WODCRT4B","WODCRT4C","WODCRT4D","DRLGPT1A","DRLGPT1B","WOODSM1A","WOODSM1B","CMFYFB1A","PRCHOR1A","PRCHOR1B",
			"PRCHOR2A","PRCHOR2B","PRCHOR3A","PRCHOR3B","PRCHOR3C","PRCTRM1A","PRCTRM1B","PRCTRM2A","PRCTRM2B","PRCTRM3A","PRCTRM3B","WODCBA1A",
			"WODCBA1B","WODCBA1C","WODESK1A","WODESK1B","PTHWO1A","PTHWO2A","PTHWO2B","PTHWO3A","PTHWO3B","PTHWO3C","PTHWO4A","PTHWO5A","PTHWO6A",
			"PTHWO6B","PTHWO6C","FASWAL1A","FASWAL3A","BKSHLF1B","WODLIB1A","WODLIB2A","WODLIB3A","WODLIB4A","WODLIB4B","WODLIB4C",
			"WODLIB4D","WODLIB5A","OFICAB2C","WODTBT1C", "BOX3"
		};

	// Metal
	static const Name MetalMaterials[] =
		{
			"SIDELOCK","PNLSKT","CNPCABI", "STEMTRI2", "MINW11W", "MINW11CT", "TEETHW1A", "TEETHW1B",
			"COLLID","DRSML","VENMB","DROPCD","BTHSPKR","BTHSPKS",
			"DROPC","DRSCD","ACETEAL","MINW13W","PNLSK12","DRDLGTR2", "VENT1A", "VENT1B", "VENT1C", "VENT1E", "VENT1F",
			"DRDLGTRB","MINW1CTY","SILVER1L", "COMPSMAL", "DRCLC", "DOORTRAK",
			"PTHWALL7","FCABIB","FCABIC","PTHWALL8","MCTC10","MINW13CT",
			"STESLVT2","FLOWAL2B","CVFGRD4","STEW3BB","MCTC5","BLUTX3M","PNLGH2","PNLGH4",
			"S1","S2","s3","STELCWB","s3","LCKR1","LFW18B","LFW18RE","LFW18BL","LFW18GR",
			"COMPVENT","PTHWALL1","DRSTFRM2","PTHWALL2","LCKR2","LCKR3","MINW11CL","MINW11CT", "VENDBUNY", "GAMEBORD",

			"DRDLGTRD","PTHWALL3","PTHWALL4","PTHWALL5", "STEMTRI2", "MINW11W", "MINW11CT",
			"COLLID","DRSML","VENMB","DROPCD", 
			"DROPC","DRSCD","ACETEAL","MINW13W","PNLSK12","DRDLGTR2", "LFW13BR",
			"DRDLGTRB","MINW1CTY","SILVER1L", "COMPSMAL", "DRCLC", "DOORTRAK",

			"PTHWALL6","FCABIB","STLSUPB","CVFGRD2","ENWL13G",
			"STESLVT2","FLOWAL2B","CVFGRD4","STEW3BB","MCTC5","BLUTX3M",
			"RW33_3","PNLSKTG","MCTB20D","COMPVENB","MCTA5A","LCKR4",
			"PNLRFW4","PNLRFW3","GHOLABW1","GHOVTRM1","ENWL13A","FLGATEC1",
			"PNLSK26",

			"PNLRFW2","DRELEV2","GREYPLA2","GREYPLA1","LFW13BG3","DRELEV2L",
			"MCACOV", "MCACOVB","STELWF1C","RROCK15","CVFGRD1","CPNL6T1","GHOTEAL", "GHOTEALB", "GHOTEALC",
			"CNTRSIDE","PNLRFW1","LFW13BB","DRCLCD","PNLGH1","LCKR4",
			"PNLRFW4","MCTC7A","MCTC7A","MCTC31","FSTDMD4","FSTDMD3","FSTDMD2",
			"DRSCA","MCTC9","MCTC9B","FSTRS2A","CPNL7TA",

			"ARCHCOLA","PNLSKT2","MINW1B","OCFRM3U","PANWHIT","ENWL13C",
			"GWYN1","STELWF1C","RROCK15","CVFGRD1","CPNL6T1","GHOTEAL",
			"CNTRSIDE","GWYN2","GWYN4","GWYN3","GWYN5","XINW11W",
			"GWYN6","GWYN7","GWYN8","CABDRAW2","CABDRAW","GWYN9",
			"GWYN10", "OFIWAG1A", "OFIWAG1B", "OFIWAG2A", "OFIWAG2C", "OFIWAG2D", "OFIWAG2E", "OFIWAG4A", "PTHWALG7",

			"CPFAN1B", "CPFAN2B", "CPFAN3B", "CPFAN4B"

			"MINW3F", "BAYRBDOS",

			"GWYN13","GWYN12","GWYN14","GWYN15","FLSTE4","FLSTE4b",
			"GWYN16","COMP04_8","GWYN17","GWYN18","GWYN19","GWYN20",
			"GWYN21","GWYN22","GWYN23","MINW4DB","GREYPLA2","CPNL6T0",
			"FLGATEC2","MCTD12","MOSA1C","OFIWAL2B","VANINDUC","MEGRIMY4",
			"OFIWAL1B", "GWYN22","GWYN23","MINW4DB","GREYPLA2","CPNL6T0",
			"VANINDU","OFIWAL1A","FLOWAL1A","FLOWAL4A","OFIWAL2A","FLOLOK1B",
			"PTHFCBC","PTHFCBA","PTHWALL9","FLOINDUC","GOTBW5","GOTBW1","GWYNV1","PNLSO2FA", "OFIWAL4A",
			"PNLSO2FB","FSTRS2A","LFW1B","MCTC31","PNLSO2CA","STETRM2B","STETRM2C","STETRM2D","STETRM2W",
			"PNLSF5","PNLSF5B","FLTILEG4","FLTILEG2","FRIDGE","FRIDGEB","VACTRAKA","VACTRAKB","VACWAL2A",
			"FLGR","FLGRCV2","FLGRD","FLGRDB","slime15c","sup308be","sup308bf","suplonga","TRIGEN1A","TRIGEN1B","TRIGEN2A","TRIGEN2B",
			"CNTRFRNT","CNTRFRNU","OFIFLA2A","OFIDUCTA","OFIDUCTB","GRALOW1A","GRALOW2A","GRALOW2B",
			"FLOHOR1A","FLOHOR1B","FLOHOR1C","FLOHOR1D","FLOHOR2A","FLOHOR2B","FLOHOR3A","FLOHOR3B","FLOHOR3C","FLOHOR3D",
			"ELPANELA","ELPANELB","ELPAFL1A","WROOFL2","ELPATR1A","ELPATR1B","CARGOC1A","LABWAL1A","LABWAL1B","LABWAL1C",
			"LABWAL2A","LABWAL2B","LABWAL2C","LABWAL3A","LABWAL3B","LABWAL3C","LABWAL3D","LABFLATA","LABFLATB","LABFLATC","LABFLATD",
			"SCRLAB1A","SCRLABSI","SCRLABTO","BLOCKWGA","CLWPNL1A","CLWPNL1B","DRFBF1A","DRFBF1B","DRFBF2A","DRFBF2B","FBFTRIMA",
			"FBFTRIMB","FBFTRIMC","FBFTRIMD","LABSIDE","LABSIDEB","LABSIDEG","LABSIDEL","LABSIDEY","BLOSIDE","BLOSIDEB","BLOSIDEG",
			"BLOSIDEL","BLOSIDEY","LABHTR1A","LABHTR1B","BLOTRM1A","BLOTRM1B","BLOTRM1C","BLOTRM2B","BLOTRM2G","BLOTRM2L","BLOTRM2Y",
			"COMPSCWL","BLOWBT1A","BLOTRM3S","BOXFLA1A","BLOHOR1A","CONVB1A","PIPFAT1B","PIPFAT1G","PIPFAT1R","PIPFAT1Y",
			"DRLALK1A","DRLALK1B","DRLALK1C","DRLALK2A","LABTRMTA","LABTRMTB","LABTRMTC","LABTRMTD","BLOPIL2A","BLOPIL2B","BLOSCRPA","BLOSCRPB",
			"BLOLED1B","BLOLED1G","BLOLED1Y","BLOLON1A","BLOLON1B","BLOLON2A","BLOLON2B","BLOLON1E","BLOLON1F","BLOCRS1A","BLOR1S","BLOR2S",
			"BLOR1T","BLOR2T","BLOFLO1A","BLOFLO1B","BLOFLO2A","BLOFLO2B","BLOGEO1A","PONGTBLB", "GRAYPAN2", "PTHFCBD","PTHSHUTA","PTHSHUTB",
			"BLOCRS2A","BLOCRS2B","BLOCPU1A","BLOCPU1B","CONPAN1A","RESLAR1A","RESLAR1B","RESLAR1C","STARWL1A","STARWL1B","STARWL1D","STARWL1G","STARWL1P",
			"STARWL1R","STARWL2A","STARWL2B","STARWL2D","STARWL2G","STARWL2P","STARWL2R","STARBR1A","STARBR1B","STARBR1C","STARBR2A","STARWL3A","STARWL3B",
			"STARWL3C","STARWL3D","STARWL4B","STARWL4D","STARWL4G","STARWL4P","STARWL4R","STARST1A","STARST1B","STARST1G","STARST1R","STARST1Y",
			"STARCLOA","STARCLOB","STARCLOD","STARFL2A","STARFL2B","STAROF1A","BARLITES","DRLGTDES","DRPTH2S","DRLGTDEO"
			"STARTB1A","STARTB1B","STARCO1A","STARCO1B","STARJU1A","STARJU1L","STARWL5A","DRSTAR1A","DRSTAR1C","DRSTAR1O","DRSTAR1S","STARSC1A",
			"STARSC1B","STARSC1D","STARSC1G","STARSC1P","STARSC1R","STARTR1A","STARTR1B","STARCO2A","STARCO2B","DRUP1A","DRUP1B","DRUP1C","DRUP1D","DRUP2A",
			"DRUP2B","DRUP2C","DRUP2D","STARPN1A","STARPN1B","STARPN1C","STARPN1D","STARCO3A","STARCO3B","STARCO4A","STARCO4B","STARCO4C",
			"STARCO4G","STARCO4P","STARCO4R","STARCO4S","STARCO4Y","STARWL7A","STARWL7B","STARWL7D","STARWL7G","STARWL7P","STARWL7R","FACPAN1A","FACPAN1B",
			"FACTRI1A","FACTRI1B","FACTRI1C","FACTRI1D","FACPAN2A","FACPAN2B","FACTFL1A","FACTFL2A","FACFL2B","FACTFL2C","FACTFL2D","FACTRM1A",
			"FACTRM1B","FACTRM2A","FACTRM2B","FACTRM2C","FACTRM2D","FACTRM2E","FACTRM2F","FACCOM1A","FACCOM1B","FACCOM1C","FACCOM1D","FACCOM1E",
			"BLEDPK2S","FACCOL2A","FACCOL2B","FACWAL1A","FACWAL1B","FACWAL2A","FACWAL2B","DRFAC1A","DRFAC1B","DRFAC1C","DRFAC1S","FACFLO1A",
			"FACFLO1B","FACFLO2A","FACFLO2B","FACFLO2C","FACWAL3A","FACWAL3B","SERVCL1A","SERVCL1E","SERVCL2A","SERVCL2B","SERVCL2C","FACSCR1A",
			"FACSCR2A","FACSCR2B","FACSCR2A","FACSCR2B","FACSCR2C","FACWAL4A","FACWAL4B","TRIMTH1A","TRIMTH1B","TRIMTH1C","TRIMTH1D","TRIMTH1E",
			"STEPTR1A","STEPTR1B","STEPTR2A","STEPTR3A","STEPTR4A","STEPTR4B","FACCIR1A","FACTRM3A","FACTRM3B","FACTRM3C","FACTRM3D",
			"FACVEN1A","FACVEN1B","FACVEN1C","FACCIR2A","FACCIR2B","FACCIR2C","FACCIR2D","ENGHAT1A","ENGHAT1B","ENGHAT1C","ENGHAT1D","ENGHAT1E",
			"ENGHAT1F","ENGHAT1G","ENGHAT2A","ENGHAT2B","ENGHAT3A","ENGHAT3B","PIPFAT4A","FACCOL3A","FACCOL3B","FACPIC1A","FACWAL5A","FACWAL5B",
			"FACWAL6A","FACWAL6B","FLADIS1A","FLADIS1B","FLADIS1C","FLADIS1G","FLADIS1O","FLADIS1P","FLADIS1R","FLADIS1W","FLADIS1Y","FLADIS3A",
			"FLADIS4A","FLADIS4B","KITBOX1A","KITBOX1B","KITBOX1C","WINBRL2A","PURBAR1B","PURBAR1C","PURBAR1G","PURBAR1O","PURBAR1P","PURBAR1R",
			"PURBAR1W","PURBAR2A","PURBAR3A","SILFLA1A","SILFLA1B","SILFLA2A","HANGWL1A","PURBAR2L","HANGFL1A","HANGFL1B","HANGFL1C","JNKSTR1A",
			"JNKSTR1B","RINLED1A","RINLED1B","RINLED1C","RINLED1G","RINLED1O","RINLED1P","RINLED1R","CITGEN1A","CITGEN1B","CITGEN1C","CITGEN2A",
			"CITGEN2B","CITGEN2C","CITGEN3A","CITGEN3B","CITGEN3C","CITGEN3D","CITGEN4A","CITGEN4B","CITGEN4C","CIRLIT1W","CIRLIT1B","CIRLIT1G",
			"CIRLIT1O","CIRLIT1P","CIRLIT1R","CIRLIT1Y","LESTRWL1","MAIINN1A","MAIINN1B","MAIINN2A","FACWAL7A","FACWAL7B","MACWAL1A","MACWAL1B",
			"MACWAL1C","MACWAL1D","MAISML1A","MAISML2A","MAIINN3A","MAIINN3B","MAIINN4A","CITGEN4D","CITGEN4E","CITGEN4F","CITGEN4G","METSEG1A",
			"METSEG1B","tekgry07","tekgry08","TILMAC1A","TILMAC1B","MACWAL2A","MACWAL2B","MACWAL2C","MACWAL2D","PNLRFW1O","MACFUS1A","MACFUS1B",
			"METSEG2A","METSEG2B","METSEG3A","BOLBEA1A","BOLBEA1B","RNDCEI1A","RNDCEI1B","MAINN5A","MAINN5B","GRAHFL1A","GRAHFL1B","WALJUS1A",
			"WALJUS1B","WALJUS1C","CORUWA1A","CORUWA1B","HAZCOL1A","HAZCOL1B","HAZCOL1C","HAZCOL1D","HAZCOL1E","HAZCOL1F","REDTRM1A","BLUTRM1A",
			"TRIPIC1A","TRIPIC1B","RIBTRI1A","RIBTRI2A","JNKSTR2A","JNKSTR2B","JNKSTR2C","JNKSTR3A","JNKSTR3B","JNKSTR4A","TRMLT4A","TRMLT4B",
			"TRAM4","TRAM4R","SLBXCL1A","STEW4A","STEW4B","ISOCELEB","ISOCELEC","SLOFLA1A","SLOFLA1B","SLOFLA1C","TRIGEN3A","TRIGEN3G","TRIGEN3O",
			"TRIGEN3P","TRIGEN3R","TRIGEN4A","TRIGEN4G","TRIGEN4O","TRIGEN4P","TRIGEN4R","LEDSIC1A","RIGSTR1A","RIGSTR1B","RIGSTR1C","RIGSTR2A",
			"RIGGRA1B","WRDWL1A","JNKSTR5A","JNKSTR5B","JNKSTR5C","JNKSTR6A","JNKSTR6B","SMTHWL1A","SMTHWL1B","SMTHWL2A","SMTHWL2B","ENWL1B",
			"ENWL1E","MCARET1A","MCARET1B","MCARET1C","USCRP1A","JNKSTR7A","JNKSTR7B","JNKSTR7C","DISCFL1A","DISCFL1B",
			"SLACOL1A","SLACOL1B","BLOTHN1A","DORELS1A","DORELS1B","DORELS1C","BLUJNK1A","BLUJNK2A","BLUJNK3A","BLUJNK4A","PTHCLG2A",
			"PTHCLG2B","BLUJNK1B","BLUJNK1C","BLUJNK1D","BLUFLT1A","JMBPAN1A","JMBPAN1B","BLUJNK5A","BLUJNK5B","GWYNSD1A","GWYNSD1B","GWYNSD1C",
			"BLUJNK4B","BLUJNK4C","BLUJNK1E","BLUJNK5C","BLUJNK6A","BLUJNK6B","BLUJNK1F","BLUJFL2A","BLUJFL2B","BLUHOR1A","CITGEN5A","CITGEN5B","CIRLIT1A","FACTOF1A","FACTOF1B","FACTOF1C",
			"JNKBOX1A","JNKBOX1B","CROFLA1A","CROFLA1B","CROFLA1C","RIGTRI1A","DRSKYS2A","floor33b","pipeblug","DRBUOY1A","DRBUOY1B","DRBUOY1C",
			"DRINDU1A","DRINDU1B","DRINDU1C","DRINDU2A","DRINDU2B","DRINDU2C","DRLEFT1A","DRLEFT1B","DRLEFT1C","DRLEFT1D","DRDBGE1A","DRDBGE1B",
			"DRDBGE1C","DRDBGE1D","CHASSIS1A","BLULOG1A","BLULOG1B","BLULOG5A","BLULOG5B","DRBLCY1A","DRBLCY1B","DRBLUP1A","DRBLUP1B","DRBLUP1C",
			"DRBLDB1A","DRBLDB1B","DRBLDB1C","DRBLDB1D","DRSHUT1A","DRSHUT1B","DRSHUT1C","DRSHUT1D","CCHEAB1A","CCHEAB1B","CCHEAB1C","CCHEAB1D",
			"CCHEAB1E","CCHEAB2A","CCHEAB2B","BLUJNK7A","BLUJNK7B","BLUJNK7C","BLUJNK7D","BLUJNK5D","PRCFL2A","PRCFL2B","PRCFL2C","PRCFL2D",
			"PRCFL3A","PRCFL3B","PRCFL3C","PRCFL3D","PRCTRM1C","PEXPOF1A","PEXPOF1B","STARWL8A","STARFL4A","STARFL4B","STARFL4C","STARFL4D","STARST1O",
			"STARCO5A","STARCO5B","STARCO5G","STARCO5O","STARCO5P","STARCO5R","STARTB2A","STARTB2B","STARTB2C","STARTB2G","STARTB2P","STARTB2R",
			"STARCO5C","STARHO1A","STARHO1B","STARSB1A","STARSB1B","STARSB2A","STARSB2B","STARHO3A","STARHO3B","STARHO3C","STARHO3G","STARHO3P",
			"STARHO3R","STARHO2A","STARHO2B","STARTH1A","STARTH2A","STARTH2B","STARTH2C","STARTH2G","STARTH2P","STARTH2R","STARTR2A","STARTR2B",
			"STARSB3A","STARSB3B","STARHO4A","VENT1DUC","STARPN2A","STARPN2B","STARTB3A","STARFC1A","STARFC1B","STARFC1C","STARPN3A", "DRSTAL1A", 
			"DRSTAL1B", "DRSTAL1C","STARTH3A","STARTH3C","STARTH3W","STARPN4A","STARPN4B","STARPN4C","HOLOPN1A","HOLOPN1B","HOLOPN1C","HOLOPN1D",
			"STARBR1D","STARJK1A","STARJK1B","PTHCEI1D","PTHCEI3D","PTHWHI1A","PTHWHI1B","PTHWHI1C","PTHWHI1D","PTHWHI1E","PTHWHI2A","CONBEAMA",
			"PTHWHI3A","PTHWHI3B","PTHWHI4A","PTHWHI4B","PTHWHI4B","STARHO5A","DRSTAR2A","DRSTAR2B","DRSTAR2C","SILVER2","PTHCEI4A","PTHBAR1A",
			"PTHBAR2A","PTHPIL1A","PTHPIL1B","STARLK1A","STARLK1B","STARLK1C","STARLK2A","STARLK2B","STARLK2C","STARLK3A","STARLK3B","SERVCL3A",
			"SERVCL3B","SERVCL3C","SERVCL3D","PTHWSI1A","PTHWSI1B","STARWS1A","STARWS1B","STARWS1G","STARWS1P","STARWS1R","STARWS1W","SERVCL4A",
			"SERVCL4B","SERVCL4C","SERVCL4D","SERVCL5A","SERVCL5B","SERVCL5C","SERVCL5D","SERVCL1B","SERVCL1C","SERVCL1D","SERVCL2D","BLDPRO1A",
			"BLDPRO1B","BLDPRO1C","CIRMAC1A","SMLMAC1A","SMLMAC1B","SMLMAC1C","SMLMAC1D","SMLMAC2A","WHTMAC1A","WHTMAC2A","FRPNL1A","FRPNL2A",
			"ODDGRT1A","KITTOP1A","KITTOP1B","KITBOX1D","KITBOX2A","KITBOX2B","BLOCKWLA","BLOCKWLB","BLOCKWLL","BLOCKWLV","BLOCKWLW","KITBOX1E", "BLOCKWLY"
			"KITBOX1F","KITBOX1G","KITBOX1H","DROPE","DROPD","DROPC","DRMAL","DRCLS","DRCLE","DRCLD","VENT1","FLSFG25","DRCRST1A","DRCRST1B",
			"WEISCL1A","WEISCL1B","WEISCL1C","WEISCL1D","WEISCL1E","SHOWER1A","SHOWER1B","SHOWER1C","SHOWER2A","SHOWER3A","SHOWER1B","GRALOW3A",
			"CARPAR6C","CARPAR7A","CARPAR7B","CARPAR7C","CARPAR7D","CARPAR8A","RN_PAR8A","CARPAR8B","CARPAR8C","CARPAR8D","CARVEN1A","CARPAR8E","CARPAR2E",
			"CARPAR2F","CARPAR1G","CARPAR1H","DRFREZ1A","DRFREZ2A","FASCEI1A","FASCEI1B","FASCEI1C","LABSTE1A","DRAPROFA","DRAPROFB","DRAPROFC",
			"BLUJNK8A","BLUJNK8B","TOXPAN1A","TOXPAN1B","TOXPAN1C","TOXPAN1D","TOXPAN2A","TOXPAN2B","TOXHOR1A","TOXCOL1A","TOXHOR2A","TOXHOR2B",
			"TOXCOL1B","WODLIB4E","OFITRI1A","OFIJNK1A","OFIHOR1A","TRASID1A","OFICAB1D","OFICAB2A","OFICAB2B","OFIHOR2A","OFIHOR2B","OFIMET1A",
			"OFIMET1B","OFICOL1A","OFIWAL5A","TOXCOL2A","TOXJNK1A","TOXFLA1A","TOXFLA1B","TOXTRM2A","TOXTRM2B","TOXCOL3A","TOXHOR3A","TOXHOR3B",
			"TOXTRM3A","DRSLID1A","DRSLID1B","DRSLID1C","LABTIL1A","LABTIL1B","LABTIL1C","LABTRM1A","LABTRM1B","LABSTE2A","DRLABS1A","DRLABS1B","DRLABS1C",
			"GASCAN1A","LABSTE3A","LABSTE3B","LABSTE3C","LABSCR1A","DRAIRL1A","LABWALPA","LABWALPB","LABWALPC","RECTFL1A","RECTFL1V","LABTIL1D","LABTRM2A",
			"CPUPNLY1","CPUPNLX1","CPUPNLX2","MACTAL1A","MACTAL1B","LABBLO1A","LABOCT1A","LABTRM3A","LABBAR1A","LABBAR1B","LABBAR1C","LABSCR2A","LABSCR2B",
			"LABFLV1A","LABFLV1B","LABFLV1C","WHICOL1A","LABWTF1A","LABPOT1A","DRLABW1A","DRLABW1B","DRLABW1C","DRLABW2A","DRLABW2B","DRLABW2C","DRLABS2A",
			"DRLABS2B","DRLABS2C","LABBLO2A","ARCWAL1A","ARCBAR1A","SAFFLA3A","SAFFLA3B","SAFFLA4A","SAFLON1A","SAFFLA4B","SAFTIL1A","SAFTIL1B","SAFTIL1C",
			"SAFTRM2A","SAFTRM2B","SAFFAN1A","SAFFAN1B","SAFFAN1C","SAFSMV1A","DRSAFE1A","DRSAFE1B","DRSAFE1C","SAFTRM4A","SAFTRM4B","SAFPAN1A","SAFTRM3B",
			"SAFWAL3A","SAFTRM5A","SAFTRM6A","SAFTRM6B","SAFTRM1C","MALELE5F","SAFFLA5A","SAFFLA5B","SAFFLA5C","SAFFLA5D","SAFFLA5E","SAFFLA5F","SAFFLA6A","SAFFLA6B","SAFFLA6C",
			"TEDREF1A","TEDREF1B","DRMALT1A","DRMALT1B","DRMALT1C","DRMALT1D","LABCRA1A","LABCRA1B","ISAWAL4A","ISAFLA4A","MALDIY1A","MALDIY1B","MALDIY1C","MALDIY2A",
			"MALDIY2B","MALDIY4A","MALDIY5A","MALDIY6A","MALDIY6B","ALACLO1A","ALACLO1B","ALACLO1C","ALACLO1D","ALACLO1E","ALACLO1F",
			"CEIL5_G4","PMACHPAA","BASMSU1A","BASMSU1B","BASMSU1C","CPUJUM1A","CHASSIS1","FLADIS2A","GOHATCH2","GRALOW3B","GRALOW4A","FLDRAIN",
			"PNLRFX3","PNLRFX4","PNLRFW3","PNLRFW4","MCTCNFA","SAFTRA1A","SAFTRA2A","SAFTRA2B","SAFTRA2C","SAFTRA2D","SAFTRA3A","SAFTRA1B","SAFTRA4A","SAFTRA4B","SAFTRA4C",
			"SAFTRA4B","SAFTRA4C","SAFTRA5A","SAFTRA5B","SAFTRA6A","RESSCI1A","RESSCI1B","RESSCI2A","RESSCI2B","RESSCI2C","RESSCI2D","RESSCI3A","RESSCI4A","RESSCI4B","RESVEN1A","RESVEN1B"
			
			
		};

	// Pipe Material - These spawn steam when shot
	static const Name SteamPipeMaterial[] =
		{
			"PIPEBIG",
			"PIPEBIG2",
			"PIPFAT2A",
			"PIPFAT2B",
			"PIPFAT3A",
			"PIPFAT3B",
			"PIPEWHIT"
		};

	static const Name WaterPipeMaterial[] =
		{
			"PIPEBLUF",
			"PIPEBLUE",
			"PIPEBLUG",
			"PIPERAW",
			"PIPERAX",
			"PIPERED",
			"PIPEREE"
		};

	// Windows, bulletproof glass, posters.
	static const Name GlassMaterial[] =
		{
			"CPMONTR2","CPMONTR1","GLASS1", "POS22", "LITE3", "CABILONA",
			"POSLIT1","POS14","POS15","POS33","POS4",
			"POS20","CPMONTR2","GB1","GB2",
			"GB3","G1","G2", "G3", "D1", "D2", "POS3", "POS10",
			"D3","CK1","CEIL5_G3","CK1_OFF","CK2","CK2_OFF",
			"SCRN4A","SCRN4B","LITE1","SCRN4C","SCRN4D","SCRN4E",
			"GLASSBLO","PONGTBLA","FACMON1A","FACMON1B","FACMON1C",
			"HARVEY1","HARVEY2","ULTWDE1A","ULTWDE2A","LITEORA7", "POS53", "POS36", "LABMON1A", "LABMON1B", "LABMON1C", "LABMON1D",
			"CPMLON1A","CPMLON1C","CPMLON1B","CPMLON1D","CPMLON1R", "LABMON2A","LABMON3A", "GLASSBLU",
			"LFLNE1A","CPMONTR3","CPMONTR4","CPPINK","CPSMALEO","CPSMALL","CPSMALLE","CPSMALLB","CPSMALLG","CPSMALLO",
			"BOARDGL0","BOARDGL1","BOARDGL2","BOARDGL3","BOARDGL4","BOARDGL5","BOARDGL6","BOARDGL7",
			"CEILGT1B","CEILGT1G","CEILGT1O","CEILGT1P","CEILGT1R","CEILGT1W","CEILGT1Y","CEILGT1A",
			"LITEOFF","LITE1","LITE1DIM","LITEB2","LITEG1","LITEP1","LITEP3","LITER1","LITEY1","LITEY3", "DRLGT48B", "DRLGT48D", "DRLGT48G", "DRLGT48K",
			"DRLGT48L", "DRLGT48P", "DRLGT48Y", "DRLGTBRK", "DRLGTDEB", "DRLGTDED", "DRLGTDEG", "DRLGTDEL", "DRLGTDEO", "DRLGTDEP", "DRLGTDES", "DRLGTDEY", "DRLGTOFF"
		};

	static const Name WaterMaterial[] =
	{
		"FHDW01", "FHDW02", "FHDW03", "FHDW04", "FHDW05",
		"FHDW06", "FHDW07", "FHDW08", "FHDW09", "FHDW10",
		"FHDW11", "FHDW12", "FHDW13", "FHDW14", "FHDW15",
		"FHDW16", "FHDW17", "FHDW18", "FHDW19", "FHDW20",
		"FHDW21", "FHDW22", "FHDW23", "FHDW24", "FHDW25",
		"FHDW26", "FHDW27", "FHDW28", "FHDW29", "FHDW30",
		"FWATER1", "WATERL00", "WATERL01", "WATERL02", "WATERL03",
		"WATERL04", "WATERL05", "WATERL06", "WATERL07", "WATERL08",
		"WATERL09", "WATERL10", "WATERL11", "WATERL12", "WATERL13",
		"WATERL14", "WATERL15", "WATERL16", "WATERL17", "WATERL18",
		"WATERL19", "WATERL20", "WATERL21", "WATERL22", "WATERL23",
		"WATERL24", "WATERL25", "WATERL26", "WATERL27", "WATERL28", "WATERL29"
	};

	static const Name VoidMaterial[] =
	{
		"ALLBLACK", "PORTRAI1", "ALLWHITE"
	};


	// Bookshelfs
	static const Name BookshelfMaterial[] =
		{
			"BKSHLF1A", "BKSHLF1B", "CABILONC", "OFIBOK1A", "CABILONL"
		};

	// Weird digital non-sense
	static const Name VirtualMaterial[] =
		{
			"VRTILE1A","VRTILE1B","VRTILE1G","VRTILE2A","VRTILE2B","VRTILE2G","VRTILE3A","VRTILE3B","VRTILE3G","VRTILE4A","VRTILE4B","VRTILE4G",
			"VRTILE5A","VRTILE5B","VRTILE5G", "03B2MEMO", "STRPSC0", "POOLTBLA"
		};

	// Wire textures
	static const Name WireMaterial[] =
		{
			"WIRE1H","WIRE2H", "WIRE2W", "WIRE3H","WIREHG","WIRE3V","WIRELI"
		};



	// SETFLOOR X where X is a FloorMaterialType ID
	static const String FloorMaterialList[] = 
		{
			// BOX (Wooden)
			"SETFLOOR 1",
			"WODCRT1A","WODCBA1B","WODCRT4C","WODCRT2A","BOX2","BOX2A","BOX3", "WODCRT3A","WODCRT4B", "WODCBA1A",

			// PLASTIC
			"SETFLOOR 2",
			"PLASTIC",

			// WOOD
			"SETFLOOR 3",
			"WOODPLK2","WODZAG1A","WOODPLK1","WOODVERT","FLAT5_1","FLAT5_2","WOODFLA3","KTWRK2A","WODWHI1C","WODTPL1A", "WOODFLA7", "WOODPLK3","WOODPLK4","WOODPLK5", "WOODF2","WOODF7","WOODF8","NFPANL01", "STBWOD1", "STBWOD2", "OFICAB2C",

			// CARPET
			"SETFLOOR 4",
			"SSWTCHB","SSWTCH","CEIL4_3","FLAT5_3","FLAT5_4","FLAT5_5","FLAT14","FLOOR1_1", "SSWTCHO", "SSWTCHY", "SSWTCHP", "SSWTCHR", "ARCFLO1A", "ARCFLO2A," "ARCFLO2B", "ARCFLO2C", "ARCFLO3A", "ARCFLO3B", "ARCFLO4A", "MALELE5C", 
			"MALTOY6A","MALTOY6B", "SSWTCHG", "SSWTCHO", "SSWTCHR", "SSWTCHY", "BEDSHT1A", "BEDSHT1B", "ARCFLO2A", "ARCFLO1A", "ARCFLO2B",

			// THINMETAL
			"SETFLOOR 5",
			"PNLSF4A","PNLSF4B","FLAT5_6","RROCK10","RROCK11","RROCK12","RROCK14","FLDIAM5","STELCWB","PNLSF4B","VENT1", "DRCLS", "LABCAT1A", "LABCAT1B", "LABCAT1C", "LABCAT1D", "LABCAT1E", "LABCAT1F", "LABCAT1G", "LABCAT1H", "LABCAT2A", "LABCAT2B", 
			"MALDIY6A", "MALDIY6B","RLGATEB","VENT1A", "VENT1B", "VENT1C", "VENT1E", "VENT1F","VENT1DUC",

			// METAL
			"SETFLOOR 6",
			"FLDIAMJ","FLAT1_3","SLIME14","LFW27B","FLGH1C","LFW27A","LFW27C","LFW27B","BOX1","BOX12","BOX1A","BOX1D","BOX12","BO21WD","PTHCEI1D","OFICAB1D", "OFICAG1A", 
			"OFICAG1B", "OFICAG2C", "OFICAG2B", "OFIMET1A", "OFIMET1B", "LFW27E", "TOXJNK1A", "TOXFLA1A", "TOXFLA1B", "LABTIL1A", "LABTIL1B", "LABTIL1C", "RECTFL1A", "RECTFL1V", "LABTIL1D", "SAFTIL1A", "SAFTIL1B", "SAFTIL1C", "MALELE5F", "SAFFLA5A", "SAFFLA5B", 
			"SAFFLA5C", "SAFFLA5D", "SAFFLA5E", "SAFFLA5F", "SAFFLA6A", "SAFFLA6B", "SAFFLA6C", "LABCRA1A", "LABCRA1B", "DRELEV3L", "DRELEV3O", "MINW3F", "CEIL5_G4", "PMACHPAA",
			"BASMSU1A","BASMSU1B","BASMSU1C","CPUJUM1A","CHASSIS1","CHASSIS1A","FLADIS2A","GOHATCH2","RIGGRA1B","FASCEI1A","FASCEI1B","FASCEI1C","PNLRFX4","INDCRA1B","INDCRA2B",
			"CPUPNLX1","CPUPNLX2", "BAYRBDOS", "LFW27D", "MCTCNFA", "SAFTRA6A",
			
			// GRAVEL
			"SETFLOOR 7",
			"FLOOR6_1","FLOOR6_2","RROCK17","NFMF82GR",

			// DIRT
			"SETFLOOR 8",
			"FLAT10","GRASS1","GRASS2","RROCK16","FLAT5_7","RN_FLT57","RROCK19","RROCK20","MFLR8_4","ASHWALL3","ROCK36","QGRASS","ROCK36S", "ROCK37", "FLAT5_7", "MCBLOCKT", "CRPTH1A",

			// WATER -- Not entirely sure if this needed, since all water sectors should use 3D sectors for the effects to be properly utilized.
			"SETFLOOR 9",
			"FWATER1", "FHDW01","FHDW02","FHDW03","FHDW04","FHDW05","FHDW06","FHDW07","FHDW08","FHDW09","FHDW10","FHDW11","FHDW12","FHDW13","FHDW14","FHDW15","FHDW16","FHDW17","FHDW18","FHDW19","FHDW20","FHDW21","FHDW22","FHDW23","FHDW24","FHDW25","FHDW26","FHDW27","FHDW28","FHDW29","FHDW30","FHDW31","FHDW32","FWATER1","FWATER2","FWATER3","FWATER4",

			// ROCK AND STONE
			"SETFLOOR 10",
			"BTILEBLS","RN_BTBLS","GRAYDIA1","PURCEI2A","BTILEGYS","COBLFL1A","RN_CBL1A",

			// GRASS
			"SETFLOOR 11",
			"GROUND04","RN_GRND4","GROUND05", "MCBLOK1C", "GROUND06", "RN_GRND6", "PLMOUN1A", "PLMOUN1B",

			// GRATES
			"SETFLOOR 12",
			"GRATE1", "FSTDMD3","HZWTM1B","PNLGH1","FLS3","STELWF1B","MCTC15B","FLGR","PEXPOF1A","FABRTR1A","FLRCTW1B", "RIGGRA1A", "RW33_4",
			"GRALOW1A","GRALOW2A","GRALOW2B","GRALOW3A","GRALOW3B","GRALOW4A","FLDRAIN",

			// CABLES
			"SETFLOOR 13",
			"WIRE1H","WIRE2H","WIRE3H","WIREHG","WIRE3V","WIRELI",

			// PIPE
			"SETFLOOR 14",
			"PNLSO32B", "MDTGR1B",

			// Void
			"SETFLOOR 15",
			"ALLBLACK", "ALLWHITE",

			// GRATES
			"SETFLOOR 16",
			"FACGRT1A", "FACGRT1B", "FACGRT2A", "FACGRT2B",

			// GLASS
			"SETFLOOR 17",
			"CPMONTR1","CPMONTR2","CPMONTR3","CPMONTR4", "CEIL5_G3", "GLASS", "GLASSBL", "GLASSBLU", "GLASS1","CPPINK","CPSMALEO","CPSMALL","CPSMALLE","CPSMALLB","CPSMALLG","CPSMALLO",
			"CPMLON1A","CPMLON1C","CPMLON1B","CPMLON1D","CPMLON1R","BOARDGL0","BOARDGL1","BOARDGL2","BOARDGL3","BOARDGL4","BOARDGL5","BOARDGL6","BOARDGL7",
			"CEILGT1B","CEILGT1G","CEILGT1O","CEILGT1P","CEILGT1R","CEILGT1W","CEILGT1Y","CEILGT1A",
			"LITEOFF","LITE1","LITE1DIM","LITEB2","LITEG1","LITEP1","LITEP3","LITER1","LITEY1","LITEY3",

			// VIRTUAL
			"SETFLOOR 18",
			"POOLTBLA", "PONGTBLA"
		};
}


enum WallMaterialType {
	TM_Standard = 0,
	TM_Wood,
	TM_Metal, 
	TM_MetalCrate,
	TM_Glass, 
	TM_WaterPipe,
	TM_SteamPipe,
	TM_VirtualMat,
	TM_Bookshelf,
	TM_Water,
	TM_VoidWall,
	TM_Wire
}

enum FloorMaterialType {
	FM_Standard = 0,
	FM_Box 		= 1,
	FM_Plastic 	= 2,
	FM_Wood		= 3,
	FM_Carpet	= 4,
	FM_Rock		= 5,
	FM_Metal	= 6,
	FM_Gravel	= 7,
	FM_Dirt		= 8,
	FM_Water	= 9,
	FM_Stone	= 10,
	FM_Grass	= 11,
	FM_Grating	= 12,
	FM_Cables	= 13,
	FM_Pipe		= 14,
	FM_Void 	= 15,
	FM_Catwalk 	= 16,
	FM_GlassFloor = 17,
	FM_VirtualMat = 18,
}


class MaterialIndexer : StaticEventHandler {
	mixin ImpactMaterial;
	Map<TextureID, uint> table, floorTable;
	uint startIndex;

	static clearscope MaterialIndexer Instance() {
        return MaterialIndexer(StaticEventHandler.Find("MaterialIndexer"));
    }

	uint getMaterialType(TextureID tex) {
		/*uint tid = uint(tex);
		uint val;
		bool success;
		[val, success] = table.get(tid);

		if(!success) {
			//Console.Printf("Failed to find material for texture: %d - %s", uint(tex), TexMan.GetName(tex));
		}

		return val;*/
		return table.GetIfExists(tex);
	}

	uint getFloorMaterialType(TextureID tex) {
		/*uint tid = uint(tex);
		uint val;
		bool success;
		[val, success] = floorTable.get(tid);

		return val;*/
		return floorTable.GetIfExists(tex);
	}

	// Create a quick lookup table that associates all marked texture files with material types
	override void OnRegister() {
		SetOrder(-999);
	}

	override void WorldLoaded(WorldEvent e) {
		if(table.CountUsed() || floorTable.CountUsed()) return;	// Only set up once

		table.Clear();
		floorTable.Clear();

		Array<TextureID> glassTexs, elevatorPanelTexs, purchaseTexs, lockPanelTexs, lightPanelTexs, shutterPanelTexs, waterTex;
		processGroupTexture(glassTexs, "CPMO", TM_Glass, FM_GlassFloor);
		processGroupTexture(elevatorPanelTexs, "PNLEL", TM_VirtualMat);
		processGroupTexture(purchaseTexs, "PUR_", TM_VirtualMat);
		processGroupTexture(lockPanelTexs, "SMLLO", TM_VirtualMat);
		processGroupTexture(lightPanelTexs, "LIGHTU", TM_VirtualMat);
		processGroupTexture(shutterPanelTexs, "SHUT", TM_VirtualMat);
		processGroupTexture(waterTex, "WATER", FM_Water, FM_Water);
		
		foreach(val : VirtualMaterial) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_VirtualMat);
			}
		}

		foreach(val : GlassMaterial) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_Glass);
			}
		}

		foreach(val : MetalMaterials) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_Metal);
			}
		}

		foreach(val : MetalCrateMaterial) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_MetalCrate);
			}
		}

		foreach(val : WoodMaterials) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_Wood);
			}
		}

		foreach(val : WaterPipeMaterial) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_WaterPipe);
			}
		}
		
		foreach(val : SteamPipeMaterial) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_SteamPipe);
			}
		}

		foreach(val : BookshelfMaterial) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_Bookshelf);
			}
		}

		foreach(val : WaterMaterial) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_Water);
			}
		}

		foreach(val : VoidMaterial) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_VoidWall);
			}
		}

		foreach(val : WireMaterial) {
			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				table.insert(tid, TM_Wire);
			}
		}

		int floorType = FM_Standard;
		foreach(val : FloorMaterialList) {
			if(val.left(9) == "SETFLOOR ") {
				floorType = val.mid(9).toInt();
				continue;
			}

			TextureID tid = TexMan.checkForTexture(val);
			if(tid && tid.isValid()) {
				floorTable.insert(tid, floorType);
			}
		}
	}

	void processGroupTexture(Array<TextureID> texs, string prefix, int wallMaterial = -1, int floorMaterial = -1)
	{
		TexMan.FindTextures(prefix, texs);
		let xs = texs.size();
		for(int x = 0; x < xs; x++) {
			if(wallMaterial != -1)
			{
				table.insert(texs[x], wallMaterial);
			}
			if(floorMaterial != -1)
			{
				floorTable.insert(texs[x], floorMaterial);
			}
		}	
	} 

}


Class SteamShooter : actor {
	int steamParticlesSpawned;

	default {
		Height 5;
		damageType "fire";
		Radius 5;
		Mass 0;
		+NOGRAVITY;
	}

  	states {
		Spawn:
			TNT1 A 1;
			TNT1 A 0 A_PlaySound("Steam/Loop", CHAN_AUTO, 1, 1);
		Looper:
			TNT1 A 1 {
				// TODO: This is broken. The angle appears to be absolute at all times
				A_SpawnDefinedParticle("SteamParticleDefinition", -5, 0, -5, fRandom(3.35, 4.4), 0, fRandom(-0.5, 0.5), fRandom(-8, 8));
				steamParticlesSpawned++;
				if (steamParticlesSpawned == 400) {
					SetStateLabel("Death");
				}
			}
			loop;
		Death:
			stop;
    }
}

Class PipeBurster : Actor {
	const TOTAL_BURSTS_DEFAULT = 6;
	int totalBursts;
	default {
		+NOINTERACTION
	}
	states {
		Spawn:
			TNT1 A 0;
			TNT1 A 0;
			TNT1 A 0 {
				totalBursts = TOTAL_BURSTS_DEFAULT;

				// Allow more burst pipes on high detail settings
				if(LevelEventHandler.instance().gameDetailSetting >= GAMEDETAIL_HIGH) {
					totalBursts*=2;
				}

				if (CheckProximity("PipeBurster", 450, totalBursts)) {
					SetStateLabel("Killed");
				} else {
					A_PLAYSOUND("dest/steambreak", CHAN_AUTO, 1.0, 0, 0.8);
					A_SpawnProjectile ("SteamShooter", 2, 0, 0, 2, random (-360, 360));
				}
			}
		// Used as a counter. When there are too many pipe bursts nearby, the pipe is considered ''depleted''
		Checker:
			TNT1 A 1200 {
				bNoInteraction = true;
			}
			stop;
		Killed:
			TNT1 A 0;
			stop;
	}
}

Class WaterBurster : Actor {
	default {
		+NOINTERACTION
	}
	states {
		Spawn:
			TNT1 A 0;
			TNT1 A 0 {
				if (CheckProximity("WaterBurster", 300, 5)) {
					SetStateLabel("Killed");
				} else {
					A_PLAYSOUND("dest/steambreak", CHAN_AUTO);
					A_SpawnProjectile ("leakingWaterTemp", 2, 0, 0, 2, random (-360, 360));
				}
			}
		// Used as a counter. When there are 4 pipe bursts nearby, the pipe is considered ''depleted''
		Checker:
			TNT1 A 1200 {
				bNoInteraction = true;
			}
			stop;
		Killed:
			TNT1 A 0;
			stop;
	}
}
