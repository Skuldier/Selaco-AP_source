extend class DeathceptionMaster
{
    override void postbeginPlay()
    {
        super.postBeginPlay();
        A_SetTranslation("PurpleToRedBlood");
        bloodIsRed = true;
		corpseFaction = CT_ZOMBIE;
		assignEffects();
    }
}

class AlienIntestine_RED : HumanIntestine replaces AlienIntestine { }
class AlienIntestineSmall_RED : AlienIntestine_RED replaces AlienIntestineSmall
{
	default
	{
		speed 2;
		scale -0.09;
	}
}

class RedBloodFloorDecal : HumanBloodSplatters replaces OMINOUS_PurpleSpot {  
    default
    {
        scale 0.26;
    }
}

class ThickGoreSplatterRed : HumanBloodSplatters replaces ThickGoreSplatter { }

class PurpleGoreSmokeEffect_RED : PurpleGoreSmokeEffect replaces PurpleGoreSmokeEffect 
{ 
    static const String SmokeEffects[] = {"HBM1", "HBM2", "HBM3"};

	override void tick()
	{
		super.tick();
		A_SETSCALE(scale.x+0.02);
	}

	states {
        Indexer:
            // Index the whole thing. We don't want another instability problem.
            HBM1 A 0;
            HBM2 A 0;
            HBM3 A 0;
        Spawn:
            TNT1 A 0 {
				A_SETROLL(frandom(0,360));
                pickedArray = random(0,SmokeEffects.size() -1);
                A_CHANGEVELOCITY(frandom(-0.3,-0.6),0,0.5);
            }
            TNT1 A 0 {
                Sprite = GetSpriteIndex(SmokeEffects[pickedArray]);
            }
		Effect:
			TNT1 ABCDEFGHIJKLMNOP 1 a_fadeout(0.07);
			stop;
	}
}
class PurpleGoreSmokeEffectTransparant_RED : PurpleGoreSmokeEffect_RED replaces PurpleGoreSmokeEffectTransparant { }

class BloodSplatterEffect_RED : BloodSplatterEffect replaces PurpleSplatterEffect { }

class PurpleSplatterEffectTransparant_RED : BloodSplatterEffect replaces PurpleSplatterEffectTransparant
{
	default
	{
		alpha 0.5;
	}
}

class BloodSplatterEffectBig_RED : BloodSplatterEffect replaces PurpleSplatterEffectBig {
	default{
		Decal "";
		scale    0.21;
		speed    3;
		GRAVITY 0.2;
	}
}

class PurpleSplatterEffectGigantic_RED : BloodSplatterEffectBig_RED replaces PurpleSplatterEffectGigantic
{
	default
	{
		Decal "";
		alpha 0.6;
		scale 0.4;
	}
	states
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SetRoll(random(0, 360));
			HUBL ABCDEFGHIJKLM 2;
			HUBL MMMMMMMMMMMMMMMM 1 A_FadeOut(0.1, FTF_REMOVE);
			Stop;
	}
}


class PurpleSplatterEffectSmall_RED : BloodSplatterEffect_RED replaces PurpleSplatterEffectSmall {
	default {
		Decal "";
		scale 0.12;
		GRAVITY 0.2;
	}
}

class PurpleSplatterEffectTiny_RED : BloodSplatterEffect_RED replaces PurpleSplatterEffectTiny {
	default 
    {
		Decal "";
		scale 0.03;
		alpha 0.5;
		GRAVITY 0.2;
	}
	states
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SetRoll(random(0, 360));
			HUBL ABCDEFGHIJKLMN 1;
			HUBL OPQQQQQQQQQQQQQQQQQQQQQQ 1 A_FadeOut(0.05, FTF_REMOVE);
			Stop;
	}
}


class SuperGorePurple_RED : SuperGoreRed replaces SuperGorePurple { }

class SuperGorePurpleMist_RED: SuperGoreRed replaces SuperGorePurpleMist 
{
	default {
		Scale 0.7;
		Speed 8;
		Gravity 0.3;
	}
}

class SuperGoreMistPurpleSmall_RED: SuperGoreRed replaces SuperGoreMistPurpleSmall
{
	default {
		Scale 0.35;
		Speed 2;
		Gravity 0.1;
	}
}

class SuperGoreMistPurpleSmallLowAlpha_RED : SuperGorePurple_RED  replaces SuperGoreMistPurpleSmallLowAlpha
{
	default {
		alpha 0.17;
		Scale 0.27;
		Speed 2;
		Gravity 0.1;
	}
    states {
		Indexer:
			BLER A 0;
			stop;
		Spawn:
			TNT1 A 0;
			TNT1 A 0
			{
				sprite = GetSpriteIndex(spriteToUse);
			}
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 
			{	
				A_SETROLL(roll+rollSpeed);
				A_SETSCALE(scale.x +0.004);
				A_FadeOut(0.004, FTF_REMOVE);
			}
			stop;
		}
}

class AlienBrainPiece_RED : HumanBrainPiece replaces AlienBrainPiece { }
class AlienBrainPieceSlow_RED : HumanBrainPieceSlow replaces AlienBrainPieceSlow { }

class PurpleBloodHit_RED : RedBloodHit replaces PurpleBloodHit { }
class PurpleBloodHitGravity_RED : RedBloodHitGravity replaces PurpleBloodHitGravity { }
class PurpleBloodMissile_RED : RedBloodMissile replaces PurpleBloodMissile { }
class PurpleBloodMissileTrail_RED : BloodTrailMissile replaces PurpleBloodMissileTrail { 
	default
	{
		+NOINTERACTION;
		speed 0;
		scale 0.03;
	}
}
class PurpleBloodMissileSmall_RED : RedBloodMissile replaces PurpleBloodMissileSmall {
    default {
		decal "BloodSplatSmall";
		speed 7;
		scale 0.1;
		PurpleBloodMissile.TrailActor "PurpleBloodMissileTrailSmall";
	}
}

class PurpleBloodMissileFast_RED : RedBloodMissile replaces PurpleBloodMissileFast
{
	default
	{
		speed 5;
	}
}

class PurpleBloodMissileNoDecal_RED : RedBloodMissile replaces PurpleBloodMissileNoDecal
{
	default
	{
		decal "";
	}
}


class CutoffLeg_RED : CutoffLeg replaces CutoffLeg 
{
	override void postbeginPlay()
	{
		super.postBeginPlay();
		A_SetTranslation("PurpleToRedBlood");
	}
	default
	{
		decal "BloodSplat";
	}	
}

Class CutoffLegMirror_RED : CutoffLeg_RED replaces CutOffLegMirror
{

	Default {
		speed 4;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 {
				A_ChangeVelocity(frandom(3, 6), frandom(-3,-6), frandom(5, 10), CVF_RELATIVE);
				A_SETSCALE(-0.22, 0.22);
				SetStateLabel("Looper");
			}
	}
}

class CutoffArmRight_RED : CutoffArmRight replaces CutoffArmRight
{
	override void postbeginPlay()
	{
		super.postBeginPlay();
		A_SetTranslation("PurpleToRedBlood");
	}
	default
	{
		decal "BloodSplat";
	}
}

class PurpleBloodChunkFading_RED : PurpleBloodChunkFading replaces PurpleBloodChunkFading {
    States	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 {
				A_SetRoll(random(0, 360));
				A_SetScale(frandom(0.25, 0.35), frandom(0.25, 0.45));	
			}
			BLOD EEEEEEEEEEEEEEEEEEEEEEEE 1 A_FadeOut(0.05);
			Stop;
	}
}

class PurpleBloodMissileTrailSmall_RED : BloodTrailMissile replaces PurpleBloodMissileTrailSmall { 
	default {
    	scale 0.03;
	}
}
class XDeath3Alien_RED : XDeath3Alien replaces XDeath3Alien {

	default {
		SelfLighting "";
	}
	States {
		Spawn:
            TNT1 A 0;
			TNT1 A 0 {
				A_SETSCALE(scale.x + frandom(0.06, 0.16));
			}
            TNT1 A 0 A_JUMP(128, "Setter");
            TNT1 A 0 A_SpawnItemEx("XDeath3Alien_b");
    Setter:
			TNT1 A 0 A_ChangeVelocity(frandom(2, 3), 0, frandom(2,3), CVF_REPLACE);
			RBBS A random(3,6);
			goto Looper;
		Looper:
			RBBS AAABBBCCCDDDEEEFFF 1  {
                if (bloodQuality >= 4) {
					A_SpawnProjectile ("PurpleBloodChunkFading", 0, 0, random (0, 360), 2, random (0, 90));
                }
            }
    	KeepLooping:
            RBBS E 1 A_SetRoll(roll + 10,  SPF_INTERPOLATE);
            loop;
		Death:
            TNT1 A 0 A_SpawnItemEx("OMINOUS_PurpleSpot");
			TNT1 A 0
			{
                if(level.maptime > 90)
				{
					A_PLAYSOUND("impact/bloodsplash", CHAN_AUTO);
				}
			}
            TNT1 A 0;
            RBBS FGHIJKL 2;
		WaitForWipe:
			RBBS L 1 {
                A_SETROLL(0);
            }
        FadeOut:
			RBBS L 1 {
                A_SPAWNITEMEX("ThickGoreSplatter");
            }			
            RBBS LLLLLLLLLL 1 A_FADEOUT(0.1);
            stop;
		VACBOTCleaning:
			RBBS LLLLLLLLLLL 1 A_FADEOUT(0.2);
			stop;
	}
}

class XDeath1Alien_RED : XDeath3Alien_RED replaces XDeath1Alien { }
class XDeath2Alien_RED : XDeath1Alien_RED replaces XDeath2Alien
{
	default {
		speed 3;
	}
}
class XDeath3Alien_b_RED : XDeath3Alien_RED replaces XDeath3Alien_b {
	default {
		SelfLighting "";
	}
}

extend class Selaco_PurpleBlood_Armor 
{
	default
	{
		decal "BloodSplat";
	}
}

class EnemySoldier_RED : EnemySoldier replaces EnemySoldier
{
	
	override void addCornerSlime(int amount) {
		// Does nothing here.
	}

	override void sprayWallDecals(actor inflictor)
	{
		for(int x=0;x<=6;x++)
		{
			// Blood wall decal
			int oldAngle = angle;
            for(int x=0;x<8;x++)
            {
                angle = random(0,360);
                vector3 sprayDirection = vecFromAngle(angle, pitch);
                inflictor.A_SprayDecal("BloodSplatSmall", 40, offset:(0,0,frandom(-20,20)), direction:sprayDirection);
            }
			angle = oldAngle;
			inflictor.A_SpawnDefinedParticle("PurpleBloodMissileDefinition", frandom(-3, 3), frandom(-3, 3),frandom(-8, 8), frandom(-4, 4), frandom(-4, 4), frandom(1, 9), random(0,360));
		}
	}
}

class SOLDIER_RED : Soldier replaces Soldier
{
	default
	{
		decal "BloodSplatSmall";
	}
}

class XDeathAlienHead_RED : XDeathAlienHead replaces XDeathAlienHead
{
	override void postbeginPlay()
	{
		super.postBeginPlay();
		A_SetTranslation("PurpleToRedBlood");
	}
}
class XDeathEngineerHead_RED : XDeathEngineerHead replaces XDeathEngineerHead
{
	override void postbeginPlay()
	{
		super.postBeginPlay();
		A_SetTranslation("PurpleToRedBlood");
	}
}
