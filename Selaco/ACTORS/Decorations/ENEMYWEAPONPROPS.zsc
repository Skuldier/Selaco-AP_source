// This is an easy one.
// Killed enemies drop their gun. Gun bounces around.
// This is just a prop. Dawn is not going to touch those disgusting alien guns.
// If any players ask why they cannot use alien weapons, tell them Dawn is allergic to Alien.
// If you are a modder and reading this: Dawn is allgeric to Alien.

class EnemyWeaponModel : Actor {
    mixin ParticleDefinitionEmitter;
    mixin SleepDebugger;
    
    override void PostBeginPlay() {
        super.PostBeginPlay();
        if(GetCvar("g_gamedetail") <= 1) {
            destroy();
        }
        A_CHANGEVELOCITY(frandom(3,5), 0, 1, CVF_RELATIVE);
        A_SETANGLE(random(0,256));
        A_SETPITCH(FRANDOM(45,190));
        A_SETROLL(frandom(50,90));
    }

    default {
        +MISSILE;
        +DOOMBOUNCE;
        +USEBOUNCESTATE;
        speed 6;
        gravity 0.8;
        radius 4;
        scale 0.29;
        +THRUACTORS;
        BounceFactor 0.6;
        BounceCount 4;
    }


	states {
		Spawn:
			TNT1 A 0;
        Looper:
			VOXE L 3 {
                A_SETPITCH(pitch+20);
                A_SETANGLE(angle+5);
            }
            loop;
        Bounce:
            TNT1 A 0 {
                A_PLAYSOUND("weapon/bounce", CHAN_AUTO, 0.6, 0, 0.9, pitch:frandom(0.9,1.1));
                for(int x=0;x<=3;x++) {
                    A_SPAWNITEMEX("BodyImpactSmokeSmallDense", 0, 0, 0, frandom(-1,1), frandom(-1,1), frandom(0.4,1.7));
                }
                A_SETANGLE(angle+80);
                EmitDefinition('ShortSparkParticleDefinition', chance: 1.0, numTries: 25, angle:frandom(0, 360), pitch:frandom(0, 40), speed:frandom(0.4,0.6), velocity:(frandom(-0.5, 0.5), frandom(-0.5, 0.5), 0));
            }
            goto looper;
        death:
            VOXE L 75 {
                A_SETSCALE(0.35);
                A_SETPITCH(0);
                A_SETROLL(0);
            }
            VOXE L 1
            {
                if(getCvar("g_permanentDestruction")) sleepIndefinite();
                else sleep(getCvar("cl_maxdecals"));
            }
            VOXE LLLLLLLLLLLLLLLLLLLL 2 A_FADEOUT(0.05);
            stop;
	}


}

class EnemyRifle : EnemyWeaponModel {

}

class EnemyPlasmaRifle : EnemyWeaponModel
{
    
}

class EnemyShotgun : EnemyWeaponModel {

}

class EnemyMinigun : EnemyWeaponModel {
    default {
        scale 0.29;
        speed 2;
        BounceFactor 0.2;
    }
}

class UC36Rifle : EnemyWeaponModel {
    override void postbeginPlay()
    {
        A_CHANGEVELOCITY(frandom(2.5,2.7), 0, 1, CVF_RELATIVE | CVF_REPLACE);
    }
    
    default
    {
        speed 2;
    }
    states
    {
        death:
            VOXE L -1 {
                A_SETPITCH(0);
                A_SETROLL(0);
                A_SETSCALE(scale.x*1.25);
            }
    }
}

class RoaringCricketModel : UC36Rifle { }

class ShotgunModel : UC36Rifle { }

class SMGModel : UC36Rifle { }

class GrenadeLauncherModel : UC36Rifle { }

class NailgunModel: UC36Rifle { }

class RailgunModel : UC36Rifle { }

class DMRModel : UC36Rifle { }

class PlasmaRifleModel : UC36Rifle { }