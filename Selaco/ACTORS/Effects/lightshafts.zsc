class LightShaftMaster : SelacoActorStatic {
	int tickCheck, seed;
	string lightSprite;


	// This is way backwards and there's a much less backwards way for this. But we're too far into development at this point.
	float getAlphaArgument() {
		return args[0]*0.1;
	}

	int assignColorSprite() {
		return args[1]; 
	}

	int getXScaleArgument() {
		return args[2]*0.05;
	}

	int getYScaleArgument() {
		return args[3]*0.05;
	}
	
	override void PostBeginPlay() {
		A_SetScale(getXScaleArgument()*0.1,getYScaleArgument()*0.1);
		// If ceiling is close, snap to ceiling
		if(abs(pos.z - ceilingz) <= 10)
		{
			SetOrigin((pos.x, pos.y, ceilingz), false);
		}

		if(!!(SpawnFlags & MTF_DORMANT))
		{
			setStateLabel("Dimmed");
		}
		super.PostBeginPlay();
	}

	override void deactivate(actor deactivator)
	{
		setStateLabel("Dimmed");
	}

	override void activate(actor deactivator)
	{
		setStateLabel("lit");
	}


    default {
		SelacoActor.NoDebugSleep true;
    	DistanceCheck "r_thingLOD";
        +SPAWNCEILING
        -SOLID
        +NOGRAVITY
        +FORCEYBILLBOARD
		+INVISIBLEINMIRRORS
        +INVULNERABLE
		+NoInteraction
        radius 5;
        height 5;
        Alpha 0.10;
        XScale 1.5;
        Yscale 1.1;
    }	
}

class LightShaftCustomizer : LightShaftMaster {

	States
		{
		Spawn:
			TNT1 A 0;
			LTRD ABCDEFGHIJKLMNOPQRSTUVWXYZ 0;
			TNT1 A 0 {
				sprite = getSpriteIndex("LTRD");
			}
			TNT1 A 0 A_SetScale(getXScaleArgument()*0.1,getYScaleArgument()*0.1);
		Lit:
			LTRD C -1 BRIGHT {
				A_SetTranslucent(getAlphaArgument(), 1);
				frame = assignColorSprite();
			}
			loop;
		Dimmed:
			LTRD C -1 {
				A_SetTranslucent(0, 1);
				frame = assignColorSprite();
			}
			loop;
		GoYELLOW:
			TNT1 A 0{
				args[1] = 2;
				args[0] = 2; 
				setStateLabel("Spawn");
			}
		Destroy:
			TNT1 A 0;
			stop;
		}	
}

class YellowLightShaft: LightShaftMaster
{
	States
		{
		Spawn:
			TNT1 A 0;
		Lit:
			LTRD C -1 BRIGHT A_SetTranslucent(0.28, 1);
			loop;
		Dimmed:
			LTRD C -1 A_SetTranslucent(0, 1);
			loop;
		Destroy:
			TNT1 A 0;
			stop;
		}
}

class LIGHTSHAFTBLUE: LightShaftMaster {
	default {
		XScale 1.5;
		Yscale 1.5;
	}
	States	{
		Spawn:
			LTRD D 1 BRIGHT;
			goto Lit;
		Lit:
			TNT1 A 0  A_SetTranslucent(0.42, 1);
			LTRD D -1 BRIGHT;
			loop;
		Dimmed:
			TNT1 A 0 A_SetTranslucent(0, 1);
			LTRD D -1 BRIGHT;
			loop;
		Destroy:
			TNT1 A 0;
			stop;
	}
}